generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  name       String?
  email      String   @unique
  password   String
  role       Role
  isApproved Boolean  @default(false)   // ðŸ‘ˆ Admin approval for sellers
  orders     Order[]                    // Buyer can have many orders
  shops      Shop[]                     // Seller can own many shops
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Shop {
  id        String   @id @default(cuid())
  name      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  products  Product[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String       @id @default(cuid())
  name        String
  price       Float
  shop        Shop         @relation(fields: [shopId], references: [id])
  shopId      String
  orderItems  OrderItem[]  // Product can appear in many order items
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id        String       @id @default(cuid())
  buyer     User         @relation(fields: [buyerId], references: [id])
  buyerId   String
  shop      Shop         @relation(fields: [shopId], references: [id])
  shopId    String
  items     OrderItem[]
  status    Status       @default(PENDING)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  BUYER
  SELLER
}

enum Status {
  PENDING
  COMPLETED
  CANCELLED
}
